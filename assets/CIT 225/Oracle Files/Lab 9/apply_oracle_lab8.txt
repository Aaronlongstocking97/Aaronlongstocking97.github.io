SQL> SET PAGESIZE 200
SQL> SET LINESIZE 80
SQL> -- --------------------------------------------------------
SQL> --  Step #1
SQL> --  -------
SQL> --  Using the query from Lab 7, Step 4, insert the 135
SQL> --  rows in the PRICE table created in Lab 6.
SQL> -- --------------------------------------------------------
SQL> 
SQL> -- Insert step #1 statements here.
SQL> 
SQL> -- Create a sequence.
SQL> CREATE SEQUENCE price_s1 START WITH 1001;

Sequence created.

SQL> 
SQL> 
SQL> --
SQL> INSERT INTO price
  2  ( price_id
  3  , item_id
  4  , price_type
  5  , active_flag
  6  , start_date
  7  , end_date
  8  , amount
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  ( SELECT price_s1.nextval
 14    ,	item_id
 15    ,	price_type
 16    ,	active_flag
 17    ,	start_date
 18    ,	end_date
 19    ,	amount
 20    ,	created_by
 21    ,	creation_date
 22    ,	last_updated_by
 23    ,	last_update_date
 24    FROM
 25  	 (SELECT   i.item_id
 26  	  ,	   af.active_flag
 27  	  ,	   cl.common_lookup_id AS price_type
 28  	  ,	   cl.common_lookup_type AS price_desc
 29  	  ,	   CASE
 30  		     WHEN (TRUNC(SYSDATE) - i.release_date) <= 30 OR
 31  			  (TRUNC(SYSDATE) - i.release_date) > 30 AND af.active_flag = 'N'
 32  		     THEN i.release_date
 33  		     ELSE  i.release_date + 31
 34  		   END AS start_date
 35  	  ,	   CASE
 36  		     WHEN (TRUNC(SYSDATE) - i.release_date) > 30 AND af.active_flag = 'N'
 37  		     THEN i.release_date + 30
 38  		   END AS end_date
 39  	  ,	   CASE
 40  		     WHEN (TRUNC(SYSDATE) - i.release_date) <= 30 THEN
 41  		       CASE
 42  			 WHEN dr.rental_days = 1 THEN 3
 43  			 WHEN dr.rental_days = 3 THEN 10
 44  			 WHEN dr.rental_days = 5 THEN 15
 45  		       END
 46  		     WHEN (TRUNC(SYSDATE) - i.release_date) > 30 AND af.active_flag = 'N' THEN
 47  		       CASE
 48  			 WHEN dr.rental_days = 1 THEN 3
 49  			 WHEN dr.rental_days = 3 THEN 10
 50  			 WHEN dr.rental_days = 5 THEN 15
 51  		       END
 52  		     ELSE
 53  		       CASE
 54  			 WHEN dr.rental_days = 1 THEN 1
 55  			 WHEN dr.rental_days = 3 THEN 3
 56  			 WHEN dr.rental_days = 5 THEN 5
 57  		       END
 58  		   END AS amount
 59  	  ,	   (SELECT su.system_user_id
 60  		   FROM   system_user su
 61  		   WHERE  su.system_user_name = 'SYSADMIN') AS created_by
 62  	  ,	   TRUNC(SYSDATE) AS creation_date
 63  	  ,	   (SELECT su.system_user_id
 64  		   FROM   system_user su
 65  		   WHERE  su.system_user_name = 'SYSADMIN') AS last_updated_by
 66  	  ,	   TRUNC(SYSDATE) AS last_update_date
 67  	  FROM	   item i CROSS JOIN
 68  		  (SELECT 'Y' AS active_flag FROM dual
 69  		   UNION ALL
 70  		   SELECT 'N' AS active_flag FROM dual) af CROSS JOIN
 71  		  (SELECT '1' AS rental_days FROM dual
 72  		   UNION ALL
 73  		   SELECT '3' AS rental_days FROM dual
 74  		   UNION ALL
 75  		   SELECT '5' AS rental_days FROM dual) dr INNER JOIN
 76  		   common_lookup cl ON dr.rental_days = SUBSTR(cl.common_lookup_type,1,1)
 77  	  WHERE    cl.common_lookup_table = 'PRICE'
 78  	  AND	   cl.common_lookup_column = 'PRICE_TYPE'
 79  	  AND NOT (af.active_flag = 'N' AND (TRUNC(SYSDATE) - 30) < i.release_date)));

135 rows created.

SQL> 
SQL> 
SQL> -- Step 1 Verification
SQL> SELECT  'OLD Y' AS "Type"
  2  ,	      COUNT(CASE WHEN amount = 1 THEN 1 END) AS "1-Day"
  3  ,	      COUNT(CASE WHEN amount = 3 THEN 1 END) AS "3-Day"
  4  ,	      COUNT(CASE WHEN amount = 5 THEN 1 END) AS "5-Day"
  5  ,	      COUNT(*) AS "TOTAL"
  6  FROM     price p , item i
  7  WHERE    active_flag = 'Y' AND i.item_id = p.item_id
  8  AND     (TRUNC(SYSDATE) - TRUNC(i.release_date)) > 30
  9  AND      end_date IS NULL
 10  UNION ALL
 11  SELECT  'OLD N' AS "Type"
 12  ,	      COUNT(CASE WHEN amount =	3 THEN 1 END) AS "1-Day"
 13  ,	      COUNT(CASE WHEN amount = 10 THEN 1 END) AS "3-Day"
 14  ,	      COUNT(CASE WHEN amount = 15 THEN 1 END) AS "5-Day"
 15  ,	      COUNT(*) AS "TOTAL"
 16  FROM     price p , item i
 17  WHERE    active_flag = 'N' AND i.item_id = p.item_id
 18  AND     (TRUNC(SYSDATE) - TRUNC(i.release_date)) > 30
 19  AND NOT end_date IS NULL
 20  UNION ALL
 21  SELECT  'NEW Y' AS "Type"
 22  ,	      COUNT(CASE WHEN amount =	3 THEN 1 END) AS "1-Day"
 23  ,	      COUNT(CASE WHEN amount = 10 THEN 1 END) AS "3-Day"
 24  ,	      COUNT(CASE WHEN amount = 15 THEN 1 END) AS "5-Day"
 25  ,	      COUNT(*) AS "TOTAL"
 26  FROM     price p , item i
 27  WHERE    active_flag = 'Y' AND i.item_id = p.item_id
 28  AND     (TRUNC(SYSDATE) - TRUNC(i.release_date)) < 31
 29  AND      end_date IS NULL
 30  UNION ALL
 31  SELECT  'NEW N' AS "Type"
 32  ,	      COUNT(CASE WHEN amount = 1 THEN 1 END) AS "1-Day"
 33  ,	      COUNT(CASE WHEN amount = 3 THEN 1 END) AS "3-Day"
 34  ,	      COUNT(CASE WHEN amount = 5 THEN 1 END) AS "5-Day"
 35  ,	      COUNT(*) AS "TOTAL"
 36  FROM     price p , item i
 37  WHERE    active_flag = 'N' AND i.item_id = p.item_id
 38  AND     (TRUNC(SYSDATE) - TRUNC(i.release_date)) < 31
 39  AND      NOT (end_date IS NULL);

Type       1-Day      3-Day      5-Day      TOTAL                               
----- ---------- ---------- ---------- ----------                               
OLD Y         21         21         21         63                               
OLD N         21         21         21         63                               
NEW Y          3          3          3          9                               
NEW N          0          0          0          0                               

4 rows selected.

SQL> 
SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #2
SQL> --  -------
SQL> --  Add a NOT NULL constraint on the PRICE_TYPE column
SQL> --  of the PRICE table.
SQL> -- --------------------------------------------------------
SQL> 
SQL> -- Insert step #2 statements here.
SQL> 
SQL> 
SQL> --
SQL> ALTER TABLE price
  2  MODIFY (price_type NUMBER CONSTRAINT nn_price_2 NOT NULL);

Table altered.

SQL> 
SQL> 
SQL> -- Step 2 Verification
SQL> COLUMN constraint FORMAT A10
SQL> SELECT   table_name
  2  ,	      column_name
  3  ,	      CASE
  4  		WHEN nullable = 'N' THEN 'NOT NULL'
  5  		ELSE 'NULLABLE'
  6  	      END AS constraint
  7  FROM     user_tab_columns
  8  WHERE    table_name = 'PRICE'
  9  AND      column_name = 'PRICE_TYPE';

TABLE NAME   COLUMN NAME        CONSTRAINT                                      
------------ ------------------ ----------                                      
PRICE        PRICE_TYPE         NOT NULL                                        

1 row selected.

SQL> 
SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #3
SQL> --  -------
SQL> --  Update the RENTAL_ITEM_PRICE column with valid price
SQL> --  values in the RENTAL_ITEM table.
SQL> -- --------------------------------------------------------
SQL> 
SQL> -- Insert step #3 statements here.
SQL> 
SQL> 
SQL> --
SQL> UPDATE   rental_item ri
  2  SET      rental_item_price =
  3  	       (SELECT	 p.amount
  4  		FROM	 price p INNER JOIN common_lookup cl1
  5  		ON	 p.price_type = cl1.common_lookup_id CROSS JOIN rental r
  6  			 CROSS JOIN common_lookup cl2
  7  		WHERE	 p.item_id = ri.item_id
  8  		AND	 ri.rental_id = r.rental_id
  9  		AND	 ri.rental_item_type = cl2.common_lookup_id
 10  		AND	 cl1.common_lookup_code = cl2.common_lookup_code
 11  		AND	 r.check_out_date
 12  			   BETWEEN p.start_date AND NVL(p.end_date,TRUNC(SYSDATE + 1)));

13 rows updated.

SQL> 
SQL> 
SQL> -- Widen the display console.
SQL> SET LINESIZE 110
SQL> 
SQL> -- Set the column display values.
SQL> COL customer_name		FORMAT A20  HEADING "Contact|--------|Customer Name"
SQL> COL contact_id		FORMAT 9999 HEADING "Contact|--------|Contact|ID #"
SQL> COL customer_id		FORMAT 9999 HEADING "Rental|--------|Customer|ID #"
SQL> COL r_rental_id		FORMAT 9999 HEADING "Rental|------|Rental|ID #"
SQL> COL ri_rental_id		FORMAT 9999 HEADING "Rental|Item|------|Rental|ID #"
SQL> COL rental_item_id 	FORMAT 9999 HEADING "Rental|Item|------||ID #"
SQL> COL price_item_id		FORMAT 9999 HEADING "Price|------|Item|ID #"
SQL> COL rental_item_item_id	FORMAT 9999 HEADING "Rental|Item|------|Item|ID #"
SQL> COL rental_item_price	FORMAT 9999 HEADING "Rental|Item|------||Price"
SQL> COL amount 		FORMAT 9999 HEADING "Price|------||Amount"
SQL> COL price_type_code	FORMAT 9999 HEADING "Price|------|Type|Code"
SQL> COL rental_item_type_code	FORMAT 9999 HEADING "Rental|Item|------|Type|Code"
SQL> SELECT   c.last_name||', '||c.first_name
  2  ||       CASE
  3  		WHEN c.middle_name IS NOT NULL THEN ' '||c.middle_name
  4  	      END AS customer_name
  5  ,	      c.contact_id
  6  ,	      r.customer_id
  7  ,	      r.rental_id AS r_rental_id
  8  ,	      ri.rental_id AS ri_rental_id
  9  ,	      ri.rental_item_id
 10  ,	      p.item_id AS price_item_id
 11  ,	      ri.item_id AS rental_item_item_id
 12  ,	      ri.rental_item_price
 13  ,	      p.amount
 14  ,	      TO_NUMBER(cl2.common_lookup_code) AS price_type_code
 15  ,	      TO_NUMBER(cl2.common_lookup_code) AS rental_item_type_code
 16  FROM     price p INNER JOIN common_lookup cl1
 17  ON       p.price_type = cl1.common_lookup_id
 18  AND      cl1.common_lookup_table = 'PRICE'
 19  AND      cl1.common_lookup_column = 'PRICE_TYPE' FULL JOIN rental_item ri
 20  ON       p.item_id = ri.item_id INNER JOIN common_lookup cl2
 21  ON       ri.rental_item_type = cl2.common_lookup_id
 22  AND      cl2.common_lookup_table = 'RENTAL_ITEM'
 23  AND      cl2.common_lookup_column = 'RENTAL_ITEM_TYPE' RIGHT JOIN rental r
 24  ON       ri.rental_id = r.rental_id FULL JOIN contact c
 25  ON       r.customer_id = c.contact_id
 26  WHERE    cl1.common_lookup_code = cl2.common_lookup_code
 27  AND      r.check_out_date
 28  BETWEEN  p.start_date AND NVL(p.end_date,TRUNC(SYSDATE) + 1)
 29  ORDER BY 2, 3;

                                              Rental Rental        Rental Rental               Rental         
                      Contact   Rental Rental   Item   Item  Price   Item   Item  Price  Price   Item         
Contact              -------- -------- ------ ------ ------ ------ ------ ------ ------ ------ ------         
--------              Contact Customer Rental Rental          Item   Item                 Type   Type         
Customer Name            ID #     ID #   ID #   ID #   ID #   ID #   ID #  Price Amount   Code   Code         
-------------------- -------- -------- ------ ------ ------ ------ ------ ------ ------ ------ ------         
Winn, Brian              1002     1002   1005   1005   1008   1007   1007      5      5      5      5         
Winn, Brian              1002     1002   1005   1005   1009   1001   1001      5      5      5      5         
Vizquel, Oscar           1003     1003   1001   1001   1003   1005   1005      5      5      5      5         
Vizquel, Oscar           1003     1003   1001   1001   1002   1004   1004      5      5      5      5         
Vizquel, Oscar           1003     1003   1001   1001   1001   1002   1002      5      5      5      5         
Vizquel, Doreen          1004     1004   1002   1002   1005   1021   1021      5      5      5      5         
Vizquel, Doreen          1004     1004   1002   1002   1004   1016   1016      5      5      5      5         
Sweeney, Meaghan         1005     1005   1003   1003   1006   1019   1019      5      5      5      5         
Sweeney, Ian M           1007     1007   1004   1004   1007   1014   1014      5      5      5      5         
Potter, Harry            1013     1013   1006   1006   1010   1016   1016      1      1      1      1         
Potter, Harry            1013     1013   1006   1006   1011   1022   1022      3      3      1      1         
Potter, Ginny            1014     1014   1007   1007   1012   1023   1023     10     10      3      3         
Potter, Lily Luna        1015     1015   1008   1008   1013   1024   1024     15     15      5      5         

13 rows selected.

SQL> 
SQL> -- Reset the column display values to their default value.
SQL> SET LINESIZE 80
SQL> 
SQL> 
SQL> -- Step 3 Verification
SQL> COL customer_name	FORMAT A24  HEADING "Customer Name"
SQL> COL city		FORMAT A12  HEADING "City"
SQL> COL state		FORMAT A6   HEADING "State"
SQL> COL telephone	FORMAT A10  HEADING "Telephone"
SQL> SELECT   m.account_number
  2  ,	      c.last_name||', '||c.first_name
  3  ||       CASE
  4  		WHEN c.middle_name IS NOT NULL THEN ' '||c.middle_name
  5  	      END AS customer_name
  6  ,	      a.city AS city
  7  ,	      a.state_province AS state
  8  ,	      t.telephone_number AS telephone
  9  FROM     member m INNER JOIN contact c
 10  ON       m.member_id = c.member_id INNER JOIN address a
 11  ON       c.contact_id = a.contact_id INNER JOIN telephone t
 12  ON       c.contact_id = t.contact_id;

Account                                                                         
Number     Customer Name            City         State  Telephone               
---------- ------------------------ ------------ ------ ----------              
B293-71445 Winn, Randi              San Jose     CA     111-1111                
B293-71445 Winn, Brian              San Jose     CA     111-1111                
B293-71446 Vizquel, Oscar           San Jose     CA     222-2222                
B293-71446 Vizquel, Doreen          San Jose     CA     222-2222                
B293-71447 Sweeney, Meaghan         San Jose     CA     333-3333                
B293-71447 Sweeney, Matthew         San Jose     CA     333-3333                
B293-71447 Sweeney, Ian M           San Jose     CA     333-3333                
R11-514-34 Clinton, Goeffrey Ward   Provo        Utah   423-1234                
R11-514-35 Moss, Wendy              Provo        Utah   423-1235                
R11-514-36 Gretelz, Simon Jonah     Provo        Utah   423-1236                
R11-514-37 Royal, Elizabeth Jane    Provo        Utah   423-1237                
R11-514-38 Smith, Brian Nathan      Spanish Fork Utah   423-1238                
US00011    Potter, Harry            Provo        Utah   333-3333                
US00011    Potter, Ginny            Provo        Utah   333-3333                
US00011    Potter, Lily Luna        Provo        Utah   333-3333                

15 rows selected.

SQL> 
SQL> 
SQL> --Step 3 Verification
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL customer_name	 FORMAT A22  HEADING "Customer Name"
SQL> COL rental_id	 FORMAT 9999 HEADING "Rental|ID #"
SQL> COL rental_item_id  FORMAT 9999 HEADING "Rental|Item|ID #"
SQL> SELECT   m.account_number
  2  ,	      c.last_name||', '||c.first_name
  3  ||       CASE
  4  		WHEN c.middle_name IS NOT NULL THEN ' '||c.middle_name
  5  	      END AS customer_name
  6  ,	      r.rental_id
  7  ,	      ri.rental_item_id
  8  FROM     member m INNER JOIN contact c
  9  ON       m.member_id = c.member_id INNER JOIN rental r
 10  ON       c.contact_id = r.customer_id INNER JOIN rental_item ri
 11  ON       r.rental_id = ri.rental_id
 12  ORDER BY 3, 4;

                                         Rental                                 
Account                           Rental   Item                                 
Number     Customer Name            ID #   ID #                                 
---------- ---------------------- ------ ------                                 
B293-71446 Vizquel, Oscar           1001   1001                                 
B293-71446 Vizquel, Oscar           1001   1002                                 
B293-71446 Vizquel, Oscar           1001   1003                                 
B293-71446 Vizquel, Doreen          1002   1004                                 
B293-71446 Vizquel, Doreen          1002   1005                                 
B293-71447 Sweeney, Meaghan         1003   1006                                 
B293-71447 Sweeney, Ian M           1004   1007                                 
B293-71445 Winn, Brian              1005   1008                                 
B293-71445 Winn, Brian              1005   1009                                 
US00011    Potter, Harry            1006   1010                                 
US00011    Potter, Harry            1006   1011                                 
US00011    Potter, Ginny            1007   1012                                 
US00011    Potter, Lily Luna        1008   1013                                 

13 rows selected.

SQL> 
SQL> 
SQL> -- Step 3 Verification
SQL> COL common_lookup_table  FORMAT A12 HEADING "Common|Lookup Table"
SQL> COL common_lookup_column FORMAT A18 HEADING "Common|Lookup Column"
SQL> COL common_lookup_code   FORMAT 999 HEADING "Common|Lookup|Code"
SQL> COL total_pk_count       FORMAT 999 HEADING "Foreign|Key|Count"
SQL> SELECT   cl.common_lookup_table
  2  ,	      cl.common_lookup_column
  3  ,	      TO_NUMBER(cl.common_lookup_code) AS common_lookup_code
  4  ,	      COUNT(*) AS total_pk_count
  5  FROM     price p INNER JOIN common_lookup cl
  6  ON       p.price_type = cl.common_lookup_id
  7  AND      cl.common_lookup_table = 'PRICE'
  8  AND      cl.common_lookup_column = 'PRICE_TYPE'
  9  GROUP BY cl.common_lookup_table
 10  ,	      cl.common_lookup_column
 11  ,	      cl.common_lookup_code
 12  UNION ALL
 13  SELECT   cl.common_lookup_table
 14  ,	      cl.common_lookup_column
 15  ,	      TO_NUMBER(cl.common_lookup_code) AS common_lookup_code
 16  ,	      COUNT(*) AS total_pk_count
 17  FROM     rental_item ri INNER JOIN common_lookup cl
 18  ON       ri.rental_item_type = cl.common_lookup_id
 19  AND      cl.common_lookup_table = 'RENTAL_ITEM'
 20  AND      cl.common_lookup_column = 'RENTAL_ITEM_TYPE'
 21  GROUP BY cl.common_lookup_table
 22  ,	      cl.common_lookup_column
 23  ,	      cl.common_lookup_code
 24  ORDER BY 1, 2, 3;

                                Common Foreign                                  
Common       Common             Lookup     Key                                  
Lookup Table Lookup Column        Code   Count                                  
------------ ------------------ ------ -------                                  
PRICE        PRICE_TYPE              1      45                                  
PRICE        PRICE_TYPE              3      45                                  
PRICE        PRICE_TYPE              5      45                                  
RENTAL_ITEM  RENTAL_ITEM_TYPE        1       2                                  
RENTAL_ITEM  RENTAL_ITEM_TYPE        3       1                                  
RENTAL_ITEM  RENTAL_ITEM_TYPE        5      10                                  

6 rows selected.

SQL> 
SQL> 
SQL> -- Step 3 Verification
SQL> COL customer_name		FORMAT A20  HEADING "Contact|--------|Customer Name"
SQL> COL r_rental_id		FORMAT 9999 HEADING "Rental|------|Rental|ID #"
SQL> COL amount 		FORMAT 9999 HEADING "Price|------||Amount"
SQL> COL price_type_code	FORMAT 9999 HEADING "Price|------|Type|Code"
SQL> COL rental_item_type_code	FORMAT 9999 HEADING "Rental|Item|------|Type|Code"
SQL> COL needle 		FORMAT A11  HEADING "Rental|--------|Check Out|Date"
SQL> COL low_haystack		FORMAT A11  HEADING "Price|--------|Start|Date"
SQL> COL high_haystack		FORMAT A11  HEADING "Price|--------|End|Date"
SQL> SELECT   c.last_name||', '||c.first_name
  2  ||       CASE
  3  		WHEN c.middle_name IS NOT NULL THEN ' '||c.middle_name
  4  	      END AS customer_name
  5  ,	      ri.rental_id AS ri_rental_id
  6  ,	      p.amount
  7  ,	      TO_NUMBER(cl2.common_lookup_code) AS price_type_code
  8  ,	      TO_NUMBER(cl2.common_lookup_code) AS rental_item_type_code
  9  ,	      p.start_date AS low_haystack
 10  ,	      r.check_out_date AS needle
 11  ,	      NVL(p.end_date,TRUNC(SYSDATE) + 1) AS high_haystack
 12  FROM     price p INNER JOIN common_lookup cl1
 13  ON       p.price_type = cl1.common_lookup_id
 14  AND      cl1.common_lookup_table = 'PRICE'
 15  AND      cl1.common_lookup_column = 'PRICE_TYPE' FULL JOIN rental_item ri
 16  ON       p.item_id = ri.item_id INNER JOIN common_lookup cl2
 17  ON       ri.rental_item_type = cl2.common_lookup_id
 18  AND      cl2.common_lookup_table = 'RENTAL_ITEM'
 19  AND      cl2.common_lookup_column = 'RENTAL_ITEM_TYPE' RIGHT JOIN rental r
 20  ON       ri.rental_id = r.rental_id FULL JOIN contact c
 21  ON       r.customer_id = c.contact_id
 22  WHERE    cl1.common_lookup_code = cl2.common_lookup_code
 23  AND      p.active_flag = 'Y'
 24  AND NOT  r.check_out_date
 25  		BETWEEN  p.start_date AND NVL(p.end_date,TRUNC(SYSDATE) + 1)
 26  ORDER BY 2, 3;

no rows selected

SQL> 
SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #4
SQL> --  -------
SQL> --  Add a NOT NULL constraint on the RENTAL_ITEM_PRICE
SQL> --  column of the RENTAL_ITEM table.
SQL> -- --------------------------------------------------------
SQL> 
SQL> -- Insert step #4 statements here.
SQL> 
SQL> 
SQL> --UPDATE rental_item
SQL> ALTER TABLE rental_item
  2  MODIFY (rental_item_price NUMBER CONSTRAINT nn_rental_item_price_8 NOT NULL);

Table altered.

SQL> 
SQL> 
SQL> -- Step 4 Verification
SQL> COLUMN constraint FORMAT A10
SQL> SELECT   table_name
  2  ,	      column_name
  3  ,	      CASE
  4  		WHEN nullable = 'N' THEN 'NOT NULL'
  5  		ELSE 'NULLABLE'
  6  	      END AS constraint
  7  FROM     user_tab_columns
  8  WHERE    table_name = 'RENTAL_ITEM'
  9  AND      column_name = 'RENTAL_ITEM_PRICE';

TABLE NAME   COLUMN NAME        CONSTRAINT                                      
------------ ------------------ ----------                                      
RENTAL_ITEM  RENTAL_ITEM_PRICE  NOT NULL                                        

1 row selected.

SQL> 
SQL> 
SQL> -- Close log file.
SQL> SPOOL OFF
